{"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2022/10/28/hello-world/"},{"title":"Gradle in Android Studio","text":"前言相信大家刚开始接触Android开发时，跟我有类似的经历：用Android Studio建一个工程，根据指引填一些package name, activity name, 选一下API level就能构建一个app，也能顺利运行。然后开始埋头写代码，然而对如何添加jar包依赖，如何打包apk，为什么Event Log里面跑个不停的Task全然不理解。今天写这篇文章的目的就是深入学习一下Android开发中Gradle的作用。 Gradle介绍首先我们要知道Gradle是什么， 百度百科：Gradle是一个基于Apache Ant和Apache Maven概念的项目自动化构建开源工具。它使用一种基于Groovy的特定领域语言(DSL)来声明项目设置，目前也增加了基于Kotlin语言的kotlin-based DSL，抛弃了基于XML的各种繁琐配置。 简单的说它就是一个可以提高我们开发效率的构建工具，在Gradle的帮助下，开发者只需要用Groovy编程语言进行一些简单的配置，就可以自动完成一些比如依赖，编译，打包，签名等重复繁琐的工作，从而专注于开发工作。 需要注意的是： Gradle是一个通用的自动化构建工具，可以完成绝大部分软件的构建工作。当然用Gradle构建Android应用也不在话下。 理解 Wrapper 在Project视图下，每个Android Studio工程目录下都有一个gradle目录，目录结构如上图所示。其中包含了gradle-wrapper.jar和gradle-wrapper.properties两个文件。从字面意思就可以理解这是对Gradle的一种包装，实际上是为了解决Gradle版本的兼容性问题，使用者可以在gradle-wrapper.properties中指定Gradle的版本，如果本地没有下载对应的jar包，则会从指定的地址下载。 下载好的文件会缓存在 .gradle 目录","link":"/2022/10/31/Gradle-in-Android-Studio/"}],"tags":[],"categories":[],"pages":[]}